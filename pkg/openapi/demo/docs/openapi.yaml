openapi: 3.0.3
info:
    title: User Management API
    description: A comprehensive API for managing users in the system
    contact:
        name: API Support Team
        url: https://example.com/support
        email: support@example.com
    license:
        name: MIT
        url: https://opensource.org/licenses/MIT
    version: 2.1.0
servers:
    - url: http://localhost:8080
      description: Development server
    - url: https://api.example.com
      description: Production server
    - url: https://api.example.com/v2
      description: Production server
    - url: https://staging-api.example.com/v2
      description: Staging server
paths:
    /auth/login:
        post:
            tags:
                - auth
            summary: User login
            description: Authenticate user and return access token
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "401":
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /auth/logout:
        post:
            tags:
                - auth
            summary: User logout
            description: Invalidate the current access token
            responses:
                "200":
                    description: Logout successful
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
            security:
                - BearerAuth: []
    /auth/me:
        get:
            tags:
                - auth
                - users
            summary: Get current user
            description: Get information about the currently authenticated user
            responses:
                "200":
                    description: User information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfo'
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
            security:
                - BearerAuth: []
    /health:
        get:
            tags:
                - health
            summary: Health check
            description: Returns the health status of the API
            responses:
                "200":
                    description: API is healthy
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthResponse'
                "503":
                    description: API is unhealthy
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /users:
        get:
            tags:
                - users
            summary: List users
            parameters:
                - name: page
                  in: query
                  description: Page number
                  schema:
                    type: integer
                - name: limit
                  in: query
                  description: Items per page
                  schema:
                    type: integer
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        post:
            tags:
                - users
            summary: Create users
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                "201":
                    description: Resource created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /users/{id}:
        get:
            tags:
                - users
            summary: Get users by ID
            parameters:
                - name: id
                  in: path
                  description: Resource ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        put:
            tags:
                - users
            summary: Update users
            parameters:
                - name: id
                  in: path
                  description: Resource ID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                "200":
                    description: Resource updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        delete:
            tags:
                - users
            summary: Delete users
            parameters:
                - name: id
                  in: path
                  description: Resource ID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Resource deleted
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /users/{id}/stats:
        get:
            tags:
                - users
                - analytics
            summary: Get user statistics
            description: Retrieve detailed statistics and analytics for a specific user
            parameters:
                - name: id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: string
                - name: period
                  in: query
                  description: Time period for statistics (7d, 30d, 90d, 1y, all)
                  schema:
                    type: string
                - name: include_details
                  in: query
                  description: Include detailed breakdown of statistics
                  schema:
                    type: boolean
            responses:
                "200":
                    description: User statistics
                "403":
                    description: Forbidden - insufficient permissions
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
            security:
                - BearerAuth: []
    /users/bulk:
        patch:
            tags:
                - users
                - bulk
            summary: Bulk update users
            description: Update multiple users in a single request for efficient batch operations
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/UpdateUserRequest'
            responses:
                "200":
                    description: Users updated successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                "400":
                    description: Invalid request data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "422":
                    description: Validation errors in request data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
            security:
                - BearerAuth: []
    /users/search:
        get:
            tags:
                - users
                - search
            summary: Advanced user search
            description: Search users with advanced filtering, sorting, and pagination
            parameters:
                - name: q
                  in: query
                  description: Search query (searches username, email, first name, last name)
                  schema:
                    type: string
                - name: page
                  in: query
                  description: Page number (1-based)
                  schema:
                    type: integer
                - name: limit
                  in: query
                  description: Number of items per page (1-100)
                  schema:
                    type: integer
                - name: sort
                  in: query
                  description: Sort field and direction (e.g., 'username:asc', 'created_at:desc')
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Filter users by status (active, inactive, all)
                  schema:
                    type: string
                - name: created_after
                  in: query
                  description: Filter users created after this date (ISO 8601)
                  schema:
                    type: string
                - name: created_before
                  in: query
                  description: Filter users created before this date (ISO 8601)
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  description: Unique request identifier for tracking
                  schema:
                    type: string
            responses:
                "200":
                    description: Search results with pagination
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserListResponse'
                "400":
                    description: Invalid query parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "401":
                    description: Unauthorized - invalid or missing token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "422":
                    description: Validation error in query parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
            security:
                - BearerAuth: []
components:
    schemas:
        LoginRequest:
            type: object
            properties:
                password:
                    type: string
                    description: Password
                username:
                    type: string
                    description: Username or email
            required:
                - username
                - password
        Time:
            type: object
        UpdateUserRequest:
            type: object
            properties:
                avatar:
                    type: string
                    description: Avatar URL
                    example: https://example.com/avatar.jpg
                first_name:
                    type: string
                    description: First name
                    example: John
                last_name:
                    type: string
                    description: Last name
                    example: Doe
        User:
            type: object
            properties:
                avatar:
                    type: string
                    description: Avatar URL
                    example: https://example.com/avatar.jpg
                created_at:
                    description: Account creation timestamp
                    $ref: '#/components/schemas/Time'
                email:
                    type: string
                    description: Email address
                    format: email
                    example: john@example.com
                first_name:
                    type: string
                    description: First name
                    example: John
                id:
                    type: string
                    description: Unique user identifier
                is_active:
                    type: boolean
                    description: Whether the user is active
                    example: "true"
                last_name:
                    type: string
                    description: Last name
                    example: Doe
                updated_at:
                    description: Last update timestamp
                    $ref: '#/components/schemas/Time'
                username:
                    type: string
                    description: Username (3-50 characters)
                    example: johndoe
            required:
                - id
                - username
                - email
                - first_name
                - last_name
                - is_active
                - created_at
                - updated_at
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            description: API key authentication
            name: X-API-Key
            in: header
        BearerAuth:
            type: http
            description: JWT Bearer token authentication
            scheme: bearer
            bearerFormat: JWT
tags:
    - name: auth
      description: Authentication endpoints
    - name: users
      description: User management endpoints
    - name: health
      description: Health check endpoints
    - name: analytics
      description: Analytics and reporting endpoints
