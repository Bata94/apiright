name: Release CLI Tool
on:
  push:
    tags:
      - 'v*.*.*' # Trigger on new tags like v1.0.0
jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    permissions:
      contents: write # Grants permission to create releases and upload assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Nix
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          # Enable flakes and unified CLI
          extra_nix_config: |
            experimental-features = nix-command flakes

      # Enter the Nix development shell and run commands
      - name: Run builds and checks in Nix shell
        run: |
          # The 'nix develop' command brings the packages and shellHook from flake.nix into scope
          # Any commands run after this will have access to 'go', 'just', etc.
          nix develop --command bash -c "
            # Now 'go' and 'just' are available
            echo 'Running inside Nix dev shell'
            rm -rf ./example
            just mod-tidy
            just pre-release
            just build-cli-all
          "

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # Use the tag version in file name
          files: |
            bin/apiright-cli-linux-amd64
            bin/apiright-cli-linux-arm64
            bin/apiright-cli-windows-amd64.exe
            bin/apiright-cli-darwin-amd64
            bin/apiright-cli-darwin-arm64
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
